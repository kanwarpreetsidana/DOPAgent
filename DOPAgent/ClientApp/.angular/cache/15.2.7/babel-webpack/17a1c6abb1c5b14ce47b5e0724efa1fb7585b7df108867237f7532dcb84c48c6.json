{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class AddClientComponent {\n  constructor(http, baseUrl, _formBuilder) {\n    this.http = http;\n    this._formBuilder = _formBuilder;\n    this.floatLabelControl = new FormControl('auto');\n    this.baseUrl = baseUrl;\n  }\n  getFloatLabelValue() {\n    return this.floatLabelControl.value || 'auto';\n  }\n  onSubmit() {\n    // Send data to the server-side controller for saving to the database.\n    const data = {\n      RDAccNo: this.RDAccNo,\n      HolderName: this.HolderName\n    };\n    const apiEndpoint = this.baseUrl + 'AddClientCnt/InsertAddClient';\n    console.log(apiEndpoint);\n    console.log(data);\n    this.http.post(apiEndpoint, data).subscribe(response => {\n      // Handle the successful response from the server here.\n      console.log('Data saved successfully', response);\n    }, error => {\n      // Handle any errors that occur during the HTTP request.\n      console.error('Error saving data', error);\n    });\n  }\n}\nAddClientComponent.ɵfac = function AddClientComponent_Factory(t) {\n  return new (t || AddClientComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nAddClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddClientComponent,\n  selectors: [[\"app-add-client\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"RDAccNo\"], [\"type\", \"text\", \"id\", \"RDAccNo\", \"name\", \"RDAccNo\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"HolderName\"], [\"type\", \"text\", \"id\", \"HolderName\", \"name\", \"HolderName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function AddClientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\");\n      i0.ɵɵelement(1, \"head\");\n      i0.ɵɵelementStart(2, \"body\")(3, \"div\", 0)(4, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function AddClientComponent_Template_form_submit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"RD Account No.:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.RDAccNo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Holder Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.HolderName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵtext(14, \"Save Data\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.RDAccNo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.HolderName);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\".example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]    + mat-form-field[_ngcontent-%COMP%] {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 220px;\\r\\n}\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n  .example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n    margin: 12px 0;\\r\\n  }\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   .mat-radio-button[_ngcontent-%COMP%] {\\r\\n  margin: 0 12px;\\r\\n}\\r\\n\\r\\n.example-form-fields[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: flex-start;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWNsaWVudC9hZGQtY2xpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxjQUFjO0VBQ2hCOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIgbWF0LWZvcm0tZmllbGQgKyBtYXQtZm9ybS1maWVsZCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIG1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMjIwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciBmb3JtIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciBmb3JtID4gKiB7XHJcbiAgICBtYXJnaW46IDEycHggMDtcclxuICB9XHJcblxyXG4uZXhhbXBsZS1jb250YWluZXIgLm1hdC1yYWRpby1idXR0b24ge1xyXG4gIG1hcmdpbjogMCAxMnB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1mb3JtLWZpZWxkcyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAsBA,WAAW,QAAQ,gBAAgB;;;;AASzD,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,IAAgB,EAAsBC,OAAe,EAAUC,YAAyB;IAAxF,SAAI,GAAJF,IAAI;IAA2D,iBAAY,GAAZE,YAAY;IAF/F,sBAAiB,GAAG,IAAIL,WAAW,CAAC,MAAwB,CAAC;IAG3D,IAAI,CAACI,OAAO,GAAGA,OAAO;EAExB;EACAE,kBAAkB;IAChB,OAAO,IAAI,CAACC,iBAAiB,CAACC,KAAK,IAAI,MAAM;EAC/C;EAGAC,QAAQ;IACN;IACA,MAAMC,IAAI,GAAG;MACXC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,UAAU,EAAE,IAAI,CAACA;KAClB;IAGD,MAAMC,WAAW,GAAG,IAAI,CAACT,OAAO,GAAG,8BAA8B;IAEjEU,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACxBC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IAEjB,IAAI,CAACP,IAAI,CAACa,IAAI,CAACH,WAAW,EAAEH,IAAI,CAAC,CAACO,SAAS,CACxCC,QAAQ,IAAI;MACX;MACAJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,QAAQ,CAAC;IAClD,CAAC,EACAC,KAAK,IAAI;MACR;MACAL,OAAO,CAACK,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CACF;EAGH;;AAxCWlB,kBAAkB;mBAAlBA,kBAAkB,4DAMiB,UAAU;AAAA;AAN7CA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,4BAAM;MACNA,uBAOO;MACPA,4BAAM;MAEIA;QAAA,OAAUC,cAAU;MAAA,EAAC;MACzBD,8BAAwB;MACDA,+BAAe;MAAAA,iBAAQ;MAC5CA,gCAAmG;MAAnEA;QAAA;MAAA,EAAqB;MAArDA,iBAAmG;MAErGA,8BAAwB;MACEA,6BAAY;MAAAA,iBAAQ;MAC5CA,iCAA4G;MAAzEA;QAAA;MAAA,EAAwB;MAA3DA,iBAA4G;MAE9GA,kCAA8C;MAAAA,0BAAS;MAAAA,iBAAS;;;MAN9BA,eAAqB;MAArBA,qCAAqB;MAIlBA,eAAwB;MAAxBA,wCAAwB","names":["FormControl","AddClientComponent","constructor","http","baseUrl","_formBuilder","getFloatLabelValue","floatLabelControl","value","onSubmit","data","RDAccNo","HolderName","apiEndpoint","console","log","post","subscribe","response","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\add-client\\add-client.component.ts","C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\add-client\\add-client.component.html"],"sourcesContent":["import { Component, NgModule, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { FloatLabelType } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-add-client',\r\n  templateUrl: './add-client.component.html',\r\n  styleUrls: ['./add-client.component.css']\r\n})\r\n\r\nexport class AddClientComponent {\r\n  RDAccNo!: string;\r\n  HolderName!: string;\r\n  baseUrl: string;\r\n  floatLabelControl = new FormControl('auto' as FloatLabelType);\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string, private _formBuilder: FormBuilder) {\r\n    this.baseUrl = baseUrl;\r\n\r\n  }\r\n  getFloatLabelValue(): FloatLabelType {\r\n    return this.floatLabelControl.value || 'auto';\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    // Send data to the server-side controller for saving to the database.\r\n    const data = {\r\n      RDAccNo: this.RDAccNo,\r\n      HolderName: this.HolderName\r\n    };\r\n\r\n\r\n    const apiEndpoint = this.baseUrl + 'AddClientCnt/InsertAddClient';\r\n\r\n    console.log(apiEndpoint);\r\n    console.log(data);\r\n\r\n    this.http.post(apiEndpoint, data).subscribe(\r\n      (response) => {\r\n        // Handle the successful response from the server here.\r\n        console.log('Data saved successfully', response);\r\n      },\r\n      (error) => {\r\n        // Handle any errors that occur during the HTTP request.\r\n        console.error('Error saving data', error);\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <!-- Add Bootstrap CSS -->\r\n \r\n  <!-- Add your custom CSS if needed -->\r\n  <style>\r\n    /* Add your custom CSS here */\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"container mt-5\">\r\n    <form (submit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"RDAccNo\">RD Account No.:</label>\r\n        <input type=\"text\" id=\"RDAccNo\" [(ngModel)]=\"RDAccNo\" name=\"RDAccNo\" class=\"form-control\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"HolderName\">Holder Name:</label>\r\n        <input type=\"text\" id=\"HolderName\" [(ngModel)]=\"HolderName\" name=\"HolderName\" class=\"form-control\" required>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Save Data</button>\r\n    </form>\r\n  </div>\r\n\r\n  <!-- Add Bootstrap JS and jQuery if needed -->\r\n\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}