{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ClientListComponent = class ClientListComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    console.log(baseUrl + 'weatherforecast');\n    http.get(baseUrl + 'weatherforecast').subscribe({\n      next: result => this.forecasts = result,\n      error: error => console.error(error)\n    });\n  }\n};\nClientListComponent = __decorate([Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n}), __param(1, Inject('BASE_URL'))], ClientListComponent);\nexport { ClientListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAsB,EAAE;IAGtCC,OAAO,CAACC,GAAG,CAACF,OAAO,GAAG,iBAAiB,CAAC;IAExCD,IAAI,CAACI,GAAG,CAAoBH,OAAO,GAAG,iBAAiB,CAAC,CAACI,SAAS,CAAC;MACjEC,IAAI,EAAEC,MAAM,IAAI,IAAI,CAACC,SAAS,GAAGD,MAAM;MACvCE,KAAK,EAAEA,KAAK,IAAIP,OAAO,CAACO,KAAK,CAACA,KAAK;KACpC,CAAC;EACJ;CAED;AAbYX,mBAAmB,eAL/BD,SAAS,CAAC;EACTa,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,EAK+BC,iBAAM,CAAC,UAAU,CAAC,IAJtCf,mBAAmB,CAa/B;SAbYA,mBAAmB","names":["Component","ClientListComponent","constructor","http","baseUrl","console","log","get","subscribe","next","result","forecasts","error","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\client-list\\client-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent {\n\n  public forecasts: WeatherForecast[] = [];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    console.log(baseUrl + 'weatherforecast');\n\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe({\n      next: result => this.forecasts = result,\n      error: error => console.error(error)\n    });\n  }\n\n}\n\ninterface ClientList\n{\n  Id: number\r\n  , RDAcc: string\r\n  , HolderName: string\r\n  , CreatedDate: Date\r\n  , CreatedBy: string\r\n  , IsActive: boolean\r\n\r\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}