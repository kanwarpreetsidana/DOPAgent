{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet ClientListComponent = class ClientListComponent {\n  constructor(http, baseUrl, router) {\n    this.router = router;\n    this.clientlistprop = [];\n    console.log(baseUrl + 'AddClientCnt/GetAddClient');\n    http.get(baseUrl + 'AddClientCnt/GetAddClient').subscribe({\n      next: result => {\n        this.clientlistprop = result;\n        console.log(result, \"testtest\");\n        console.log(this.clientlistprop);\n      },\n      error: error => console.error(error)\n    });\n  }\n  NavigateToAdd() {\n    this.router.navigate(['/add-client']);\n  }\n  OnDeleteClick(clientId) {\n    // Here, you can use the clientId parameter as needed.\n    // You can send it to a service, perform an action, or log it, for example.\n    console.log('Clicked delete for client ID:', clientId);\n    // If you want to send it to a service, you can do something like this:\n    // this.yourService.deleteClient(clientId).subscribe(response => {\n    //   // Handle the response from the service.\n    // });\n  }\n};\n\nClientListComponent = __decorate([Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n}), __param(1, Inject('BASE_URL'))], ClientListComponent);\nexport { ClientListComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAQ1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAYC,IAAgB,EAAsBC,OAAe,EAAUC,MAAc;IAAd,WAAM,GAANA,MAAM;IAF1E,mBAAc,GAAiB,EAAE;IAGtCC,OAAO,CAACC,GAAG,CAACH,OAAO,GAAG,2BAA2B,CAAC;IAElDD,IAAI,CAACK,GAAG,CAAeJ,OAAO,GAAG,2BAA2B,CAAC,CAACK,SAAS,CAAC;MACtEC,IAAI,EAAEC,MAAM,IAAG;QACb,IAAI,CAACC,cAAc,GAAGD,MAAM;QAC5BL,OAAO,CAACC,GAAG,CAACI,MAAM,EAAE,UAAU,CAAC;QAC/BL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,cAAc,CAAC;MAClC,CAAC;MAEDC,KAAK,EAAEA,KAAK,IAAIP,OAAO,CAACO,KAAK,CAACA,KAAK;KACpC,CAAC;EACJ;EAEAC,aAAa;IAEX,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;EAEvC;EAEAC,aAAa,CAACC,QAAgB;IAC5B;IACA;IACAX,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEU,QAAQ,CAAC;IAEtD;IACA;IACA;IACA;EACF;CAED;;AAnCYhB,mBAAmB,eAL/BF,SAAS,CAAC;EACTmB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,EAK+BC,iBAAM,CAAC,UAAU,CAAC,IAJtCpB,mBAAmB,CAmC/B;SAnCYA,mBAAmB","names":["Component","Inject","ClientListComponent","constructor","http","baseUrl","router","console","log","get","subscribe","next","result","clientlistprop","error","NavigateToAdd","navigate","OnDeleteClick","clientId","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\client-list\\client-list.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent {\r\n\r\n  public clientlistprop: ClientList[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, private router: Router) {\r\n    console.log(baseUrl + 'AddClientCnt/GetAddClient');\r\n\r\n    http.get<ClientList[]>(baseUrl + 'AddClientCnt/GetAddClient').subscribe({\r\n      next: result => {\r\n        this.clientlistprop = result;\r\n        console.log(result, \"testtest\");\r\n        console.log(this.clientlistprop);\r\n      },\r\n      \r\n      error: error => console.error(error)\r\n    });\r\n  }\r\n\r\n  NavigateToAdd() {\r\n\r\n    this.router.navigate(['/add-client']);\r\n\r\n  }\r\n\r\n  OnDeleteClick(clientId: number) {\r\n    // Here, you can use the clientId parameter as needed.\r\n    // You can send it to a service, perform an action, or log it, for example.\r\n    console.log('Clicked delete for client ID:', clientId);\r\n\r\n    // If you want to send it to a service, you can do something like this:\r\n    // this.yourService.deleteClient(clientId).subscribe(response => {\r\n    //   // Handle the response from the service.\r\n    // });\r\n  }\r\n\r\n}\r\n\r\ninterface ClientList\r\n{\r\n  id: number\r\n  , rdAcc: string\r\n  , holderName: string\r\n  , createdDate: Date\r\n  , createdBy: string\r\n  , isActive: boolean\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}