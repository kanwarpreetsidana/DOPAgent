{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class AddClientComponent {\n  constructor(http, baseUrl, _formBuilder) {\n    this.http = http;\n    this._formBuilder = _formBuilder;\n    this.floatLabelControl = new FormControl('auto');\n    this.baseUrl = baseUrl;\n  }\n  getFloatLabelValue() {\n    return this.floatLabelControl.value || 'auto';\n  }\n  onSubmit() {\n    // Send data to the server-side controller for saving to the database.\n    const data = {\n      RDAccNo: this.RDAccNo,\n      HolderName: this.HolderName\n    };\n    const apiEndpoint = this.baseUrl + 'AddClientCnt/InsertAddClient';\n    console.log(apiEndpoint);\n    console.log(data);\n    this.http.post(apiEndpoint, data).subscribe(response => {\n      // Handle the successful response from the server here.\n      console.log('Data saved successfully', response);\n    }, error => {\n      // Handle any errors that occur during the HTTP request.\n      console.error('Error saving data', error);\n    });\n  }\n}\nAddClientComponent.ɵfac = function AddClientComponent_Factory(t) {\n  return new (t || AddClientComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nAddClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddClientComponent,\n  selectors: [[\"app-add-client\"]],\n  decls: 32,\n  vars: 8,\n  consts: [[1, \"example-container\"], [3, \"formGroup\"], [3, \"formControl\"], [\"value\", \"auto\"], [\"value\", \"always\"], [1, \"example-form-fields\"], [3, \"hideRequiredMarker\", \"floatLabel\"], [\"matInput\", \"\", \"placeholder\", \"Simple placeholder\", \"required\", \"\"], [3, \"floatLabel\"], [\"matInput\", \"\", \"placeholder\", \"Simple placeholder\"], [\"required\", \"\"], [\"value\", \"option\"]],\n  template: function AddClientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-checkbox\", 2);\n      i0.ɵɵtext(3, \"Hide required marker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n      i0.ɵɵtext(6, \"Float label: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-radio-group\", 2)(8, \"mat-radio-button\", 3);\n      i0.ɵɵtext(9, \"Auto\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-radio-button\", 4);\n      i0.ɵɵtext(11, \"Always\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"mat-form-field\", 6);\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-form-field\", 8)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Both a label and a placeholder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-form-field\", 6)(20, \"mat-select\", 10)(21, \"mat-option\");\n      i0.ɵɵtext(22, \"-- None --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"mat-option\", 11);\n      i0.ɵɵtext(24, \"Option\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"mat-label\")(26, \"mat-icon\");\n      i0.ɵɵtext(27, \"favorite\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"strong\");\n      i0.ɵɵtext(29, \" Fancy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"em\");\n      i0.ɵɵtext(31, \" label\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.options);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.hideRequiredControl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.floatLabelControl);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"hideRequiredMarker\", ctx.hideRequiredControl.value)(\"floatLabel\", ctx.getFloatLabelValue());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"floatLabel\", ctx.getFloatLabelValue());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"hideRequiredMarker\", ctx.hideRequiredControl.value)(\"floatLabel\", ctx.getFloatLabelValue());\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup],\n  styles: [\".example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]    + mat-form-field[_ngcontent-%COMP%] {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 220px;\\r\\n}\\r\\n\\r\\n  .example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]    + mat-form-field[_ngcontent-%COMP%] {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 220px;\\r\\n}\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n  .example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n    margin: 12px 0;\\r\\n  }\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   .mat-radio-button[_ngcontent-%COMP%] {\\r\\n  margin: 0 12px;\\r\\n}\\r\\n\\r\\n.example-form-fields[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: flex-start;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWNsaWVudC9hZGQtY2xpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0VBRUU7SUFDRSxnQkFBZ0I7RUFDbEI7O0FBRUY7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxjQUFjO0VBQ2hCOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIgbWF0LWZvcm0tZmllbGQgKyBtYXQtZm9ybS1maWVsZCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIG1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMjIwcHg7XHJcbn1cclxuXHJcbiAgLmV4YW1wbGUtY29udGFpbmVyIG1hdC1mb3JtLWZpZWxkICsgbWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICB9XHJcblxyXG4uZXhhbXBsZS1jb250YWluZXIgbWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAyMjBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIGZvcm0ge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbiAgLmV4YW1wbGUtY29udGFpbmVyIGZvcm0gPiAqIHtcclxuICAgIG1hcmdpbjogMTJweCAwO1xyXG4gIH1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciAubWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgbWFyZ2luOiAwIDEycHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZvcm0tZmllbGRzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAsBA,WAAW,QAAQ,gBAAgB;;;;AASzD,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,IAAgB,EAAsBC,OAAe,EAAUC,YAAyB;IAAxF,SAAI,GAAJF,IAAI;IAA2D,iBAAY,GAAZE,YAAY;IAF/F,sBAAiB,GAAG,IAAIL,WAAW,CAAC,MAAwB,CAAC;IAG3D,IAAI,CAACI,OAAO,GAAGA,OAAO;EAExB;EACAE,kBAAkB;IAChB,OAAO,IAAI,CAACC,iBAAiB,CAACC,KAAK,IAAI,MAAM;EAC/C;EAGAC,QAAQ;IACN;IACA,MAAMC,IAAI,GAAG;MACXC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,UAAU,EAAE,IAAI,CAACA;KAClB;IAGD,MAAMC,WAAW,GAAG,IAAI,CAACT,OAAO,GAAG,8BAA8B;IAEjEU,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACxBC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IAEjB,IAAI,CAACP,IAAI,CAACa,IAAI,CAACH,WAAW,EAAEH,IAAI,CAAC,CAACO,SAAS,CACxCC,QAAQ,IAAI;MACX;MACAJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,QAAQ,CAAC;IAClD,CAAC,EACAC,KAAK,IAAI;MACR;MACAL,OAAO,CAACK,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CACF;EAGH;;AAxCWlB,kBAAkB;mBAAlBA,kBAAkB,4DAMiB,UAAU;AAAA;AAN7CA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX/BC,8BAA+B;MAEuBA,oCAAoB;MAAAA,iBAAe;MACrFA,2BAAK;MACIA,6BAAa;MAAAA,iBAAQ;MAC5BA,0CAAmD;MAClBA,oBAAI;MAAAA,iBAAmB;MACtDA,4CAAiC;MAAAA,uBAAM;MAAAA,iBAAmB;MAI9DA,+BAAiC;MAG7BA,4BAA0D;MAC5DA,iBAAiB;MAEjBA,0CAAoD;MACvCA,+CAA8B;MAAAA,iBAAY;MACrDA,4BAAiD;MACnDA,iBAAiB;MAEjBA,0CACoD;MAEpCA,2BAAU;MAAAA,iBAAa;MACnCA,uCAA2B;MAAAA,uBAAM;MAAAA,iBAAa;MAEhDA,kCAAW;MAAUA,yBAAQ;MAAAA,iBAAW;MAACA,+BAAQ;MAACA,uBAAK;MAAAA,iBAAS;MAACA,2BAAI;MAACA,uBAAK;MAAAA,iBAAK;;;MA3BhFA,eAAqB;MAArBA,uCAAqB;MACXA,eAAmC;MAAnCA,qDAAmC;MAG9BA,eAAiC;MAAjCA,mDAAiC;MAOlCA,eAAgD;MAAhDA,kEAAgD;MAKhDA,eAAmC;MAAnCA,qDAAmC;MAKnCA,eAAgD;MAAhDA,kEAAgD","names":["FormControl","AddClientComponent","constructor","http","baseUrl","_formBuilder","getFloatLabelValue","floatLabelControl","value","onSubmit","data","RDAccNo","HolderName","apiEndpoint","console","log","post","subscribe","response","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\add-client\\add-client.component.ts","C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\add-client\\add-client.component.html"],"sourcesContent":["import { Component, NgModule, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { FloatLabelType } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-add-client',\r\n  templateUrl: './add-client.component.html',\r\n  styleUrls: ['./add-client.component.css']\r\n})\r\n\r\nexport class AddClientComponent {\r\n  RDAccNo!: string;\r\n  HolderName!: string;\r\n  baseUrl: string;\r\n  floatLabelControl = new FormControl('auto' as FloatLabelType);\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string, private _formBuilder: FormBuilder) {\r\n    this.baseUrl = baseUrl;\r\n\r\n  }\r\n  getFloatLabelValue(): FloatLabelType {\r\n    return this.floatLabelControl.value || 'auto';\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    // Send data to the server-side controller for saving to the database.\r\n    const data = {\r\n      RDAccNo: this.RDAccNo,\r\n      HolderName: this.HolderName\r\n    };\r\n\r\n\r\n    const apiEndpoint = this.baseUrl + 'AddClientCnt/InsertAddClient';\r\n\r\n    console.log(apiEndpoint);\r\n    console.log(data);\r\n\r\n    this.http.post(apiEndpoint, data).subscribe(\r\n      (response) => {\r\n        // Handle the successful response from the server here.\r\n        console.log('Data saved successfully', response);\r\n      },\r\n      (error) => {\r\n        // Handle any errors that occur during the HTTP request.\r\n        console.error('Error saving data', error);\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"example-container\">\r\n  <form [formGroup]=\"options\">\r\n    <mat-checkbox [formControl]=\"hideRequiredControl\">Hide required marker</mat-checkbox>\r\n    <div>\r\n      <label>Float label: </label>\r\n      <mat-radio-group [formControl]=\"floatLabelControl\">\r\n        <mat-radio-button value=\"auto\">Auto</mat-radio-button>\r\n        <mat-radio-button value=\"always\">Always</mat-radio-button>\r\n      </mat-radio-group>\r\n    </div>\r\n\r\n    <div class=\"example-form-fields\">\r\n      <mat-form-field [hideRequiredMarker]=\"hideRequiredControl.value\"\r\n                      [floatLabel]=\"getFloatLabelValue()\">\r\n        <input matInput placeholder=\"Simple placeholder\" required>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field [floatLabel]=\"getFloatLabelValue()\">\r\n        <mat-label>Both a label and a placeholder</mat-label>\r\n        <input matInput placeholder=\"Simple placeholder\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field [hideRequiredMarker]=\"hideRequiredControl.value\"\r\n                      [floatLabel]=\"getFloatLabelValue()\">\r\n        <mat-select required>\r\n          <mat-option>-- None --</mat-option>\r\n          <mat-option value=\"option\">Option</mat-option>\r\n        </mat-select>\r\n        <mat-label><mat-icon>favorite</mat-icon> <strong> Fancy</strong> <em> label</em></mat-label>\r\n      </mat-form-field>\r\n    </div>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}