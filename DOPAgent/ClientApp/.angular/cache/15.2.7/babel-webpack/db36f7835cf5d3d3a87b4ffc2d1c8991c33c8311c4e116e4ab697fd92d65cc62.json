{"ast":null,"code":"import * as signalR from \"@microsoft/signalr\";\nimport * as i0 from \"@angular/core\";\nexport class CounterComponent {\n  constructor() {\n    this.currentCount = 0;\n    this.user = \"YourUserName\"; // Define your username here\n    this.message = \"Hello, SignalR!\"; // Define your message here\n    this.messages = [];\n  }\n  ngOnInit() {\n    this.hubConnection = new signalR.HubConnectionBuilder().withUrl('http://localhost:5142/ChatHub', {\n      transport: signalR.HttpTransportType.WebSockets,\n      skipNegotiation: true\n    }).build();\n    console.log(\"aa\");\n    this.hubConnection.start().then(() => {\n      console.log(\"Hub Connection Started\");\n    }).catch(err => {\n      console.error(\"Error while starting hub: \" + err);\n    });\n    this.hubConnection.on(\"ReceiveMessage\", (user, message) => {\n      const formattedMessage = `${user}: ${message}`;\n      this.messages.push(formattedMessage);\n      console.log(formattedMessage);\n    });\n  }\n  // Ensure this code is present in all three tabs\n  incrementCounter() {\n    // Send a message from the client to the server\n    this.hubConnection.invoke('SendMessage', this.user, this.message);\n    this.currentCount++;\n  }\n}\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)();\n};\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[\"aria-live\", \"polite\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Counter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This is a simple example of an Angular component.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 0);\n      i0.ɵɵtext(5, \"Current count: \");\n      i0.ɵɵelementStart(6, \"strong\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_8_listener() {\n        return ctx.incrementCounter();\n      });\n      i0.ɵɵtext(9, \"Increment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.currentCount);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" Message from signalr : \", ctx.message, \"\");\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;;AAO7C,OAAM,MAAOC,gBAAgB;EAJ7BC;IAKS,iBAAY,GAAG,CAAC;IAGhB,SAAI,GAAG,cAAc,CAAC,CAAC;IACvB,YAAO,GAAG,iBAAiB,CAAC,CAAC;IAC7B,aAAQ,GAAa,EAAE;;EAG9BC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAIJ,OAAO,CAACK,oBAAoB,EAAE,CACpDC,OAAO,CAAC,+BAA+B,EAAE;MACxCC,SAAS,EAAEP,OAAO,CAACQ,iBAAiB,CAACC,UAAU;MAC/CC,eAAe,EAAE;KAClB,CAAC,CACDC,KAAK,EAAE;IAEVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IAEjB,IAAI,CAACT,aAAa,CAACU,KAAK,EAAE,CACvBC,IAAI,CAAC,MAAK;MACTH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAG;MACXL,OAAO,CAACM,KAAK,CAAC,4BAA4B,GAAGD,GAAG,CAAC;IACnD,CAAC,CAAC;IAIJ,IAAI,CAACb,aAAa,CAACe,EAAE,CAAC,gBAAgB,EAAE,CAACC,IAAY,EAAEC,OAAe,KAAI;MACxE,MAAMC,gBAAgB,GAAG,GAAGF,IAAI,KAAKC,OAAO,EAAE;MAC9C,IAAI,CAACE,QAAQ,CAACC,IAAI,CAACF,gBAAgB,CAAC;MACpCV,OAAO,CAACC,GAAG,CAACS,gBAAgB,CAAC;IAC/B,CAAC,CAAC;EAEJ;EAMA;EAEOG,gBAAgB;IACrB;IACA,IAAI,CAACrB,aAAa,CAACsB,MAAM,CAAC,aAAa,EAAE,IAAI,CAACN,IAAI,EAAE,IAAI,CAACC,OAAO,CAAC;IAIjE,IAAI,CAACM,YAAY,EAAE;EACrB;;AAlDW1B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR7BC,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAEhBA,yBAAG;MAAAA,iEAAiD;MAAAA,iBAAI;MAExDA,4BAAsB;MAAAA,+BAAe;MAAAA,8BAAQ;MAAAA,YAAkB;MAAAA,iBAAS;MAExEA,iCAA6D;MAA7BA;QAAA,OAASC,sBAAkB;MAAA,EAAC;MAACD,yBAAS;MAAAA,iBAAS;MAE/EA,0BAAG;MAACA,aAAkC;MAAAA,iBAAI;;;MAJGA,eAAkB;MAAlBA,sCAAkB;MAI3DA,eAAkC;MAAlCA,kEAAkC","names":["signalR","CounterComponent","constructor","ngOnInit","hubConnection","HubConnectionBuilder","withUrl","transport","HttpTransportType","WebSockets","skipNegotiation","build","console","log","start","then","catch","err","error","on","user","message","formattedMessage","messages","push","incrementCounter","invoke","currentCount","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\counter\\counter.component.ts","C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\counter\\counter.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n  private hubConnection: signalR.HubConnection;\r\n\r\n  public user = \"YourUserName\"; // Define your username here\r\n  public message = \"Hello, SignalR!\"; // Define your message here\r\n  public messages: string[] = [];\r\n\r\n\r\n  ngOnInit() {\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('http://localhost:5142/ChatHub', {\r\n        transport: signalR.HttpTransportType.WebSockets,\r\n        skipNegotiation: true\r\n      })\r\n      .build();\r\n\r\n    console.log(\"aa\")\r\n\r\n    this.hubConnection.start()\r\n      .then(() => {\r\n        console.log(\"Hub Connection Started\");\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error while starting hub: \" + err);\r\n      });\r\n\r\n\r\n\r\n    this.hubConnection.on(\"ReceiveMessage\", (user: string, message: string) => {\r\n      const formattedMessage = `${user}: ${message}`;\r\n      this.messages.push(formattedMessage);\r\n      console.log(formattedMessage);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // Ensure this code is present in all three tabs\r\n\r\n  public incrementCounter() {\r\n    // Send a message from the client to the server\r\n    this.hubConnection.invoke('SendMessage', this.user, this.message);\r\n\r\n\r\n\r\n    this.currentCount++;\r\n  }\r\n\r\n}\r\n","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n\r\n<p> Message from signalr : {{message}}</p>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}