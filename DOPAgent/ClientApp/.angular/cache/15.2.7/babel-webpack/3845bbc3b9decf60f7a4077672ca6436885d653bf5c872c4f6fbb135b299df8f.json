{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class AddClientComponent {\n  constructor(http, baseUrl, _formBuilder, router, route) {\n    this.http = http;\n    this._formBuilder = _formBuilder;\n    this.router = router;\n    this.route = route;\n    this.Id = 0;\n    this.floatLabelControl = new FormControl('auto');\n    this.baseUrl = baseUrl;\n  }\n  getFloatLabelValue() {\n    return this.floatLabelControl.value || 'auto';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const clientId = +params.get('clientId');\n      const apiEndpoint = this.baseUrl + 'AddClientCnt/GetAddClientID';\n      this.http.post(apiEndpoint, clientId).subscribe(response => {\n        this.apiResponse = response;\n        console.log(this.apiResponse);\n        if (this.apiResponse.id > 0) {\n          this.Id = this.apiResponse.id;\n          this.RDAccNo = this.apiResponse.rdAcc;\n          this.HolderName = this.apiResponse.holderName;\n          const inputDateString = this.apiResponse.createdDate;\n          const formattedDateString = new Date(inputDateString).toISOString().split('T')[0];\n          const formattedDate = new Date(formattedDateString);\n          this.CreatedDate = formattedDate;\n        }\n      }, error => {\n        // Handle any errors that occur during the HTTP request.\n      });\n    });\n  }\n  onSubmit() {\n    // Send data to the server-side controller for saving to the database.\n    const data = {\n      Id: \"12344\",\n      RDAcc: this.RDAccNo,\n      HolderName: this.HolderName,\n      CreatedDate: this.CreatedDate\n    };\n    const apiEndpoint = this.baseUrl + 'AddClientCnt/InsertAddClient';\n    this.http.post(apiEndpoint, data).subscribe(response => {\n      this.apiResponse = response;\n      if (this.apiResponse.message == \"Success\") {\n        alert('Saved');\n        this.RDAccNo = \"\";\n        this.HolderName = \"\";\n        this.router.navigate(['/client-list']);\n      }\n    }, error => {\n      // Handle any errors that occur during the HTTP request.\n      console.error('Error saving data', error);\n    });\n  }\n}\nAddClientComponent.ɵfac = function AddClientComponent_Factory(t) {\n  return new (t || AddClientComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nAddClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddClientComponent,\n  selectors: [[\"app-add-client\"]],\n  decls: 21,\n  vars: 4,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"submit\"], [1, \"form-group\", 2, \"display\", \"none\"], [\"type\", \"text\", \"id\", \"Id\", \"name\", \"Id\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"for\", \"RDAccNo\"], [\"type\", \"text\", \"id\", \"RDAccNo\", \"name\", \"RDAccNo\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"HolderName\"], [\"type\", \"text\", \"id\", \"HolderName\", \"name\", \"HolderName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"CreatedDate\"], [\"type\", \"date\", \"id\", \"CreatedDate\", \"name\", \"CreatedDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-top\", \"10px\"]],\n  template: function AddClientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\");\n      i0.ɵɵelement(1, \"head\");\n      i0.ɵɵelementStart(2, \"body\")(3, \"div\", 0)(4, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function AddClientComponent_Template_form_submit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.Id = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"RD Account No.:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.RDAccNo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Holder Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.HolderName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 9);\n      i0.ɵɵtext(17, \"Created Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.CreatedDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 11);\n      i0.ɵɵtext(20, \"Save Data\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.Id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.RDAccNo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.HolderName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.CreatedDate);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\".example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]    + mat-form-field[_ngcontent-%COMP%] {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 220px;\\r\\n}\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n  .example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n    margin: 12px 0;\\r\\n  }\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]   .mat-radio-button[_ngcontent-%COMP%] {\\r\\n  margin: 0 12px;\\r\\n}\\r\\n\\r\\n.example-form-fields[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: flex-start;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWNsaWVudC9hZGQtY2xpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0VBRUU7SUFDRSxjQUFjO0VBQ2hCOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIgbWF0LWZvcm0tZmllbGQgKyBtYXQtZm9ybS1maWVsZCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIG1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMjIwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciBmb3JtIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciBmb3JtID4gKiB7XHJcbiAgICBtYXJnaW46IDEycHggMDtcclxuICB9XHJcblxyXG4uZXhhbXBsZS1jb250YWluZXIgLm1hdC1yYWRpby1idXR0b24ge1xyXG4gIG1hcmdpbjogMCAxMnB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1mb3JtLWZpZWxkcyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","AddClientComponent","constructor","http","baseUrl","_formBuilder","router","route","getFloatLabelValue","floatLabelControl","value","ngOnInit","paramMap","subscribe","params","clientId","get","apiEndpoint","post","response","apiResponse","console","log","id","Id","RDAccNo","rdAcc","HolderName","holderName","inputDateString","createdDate","formattedDateString","Date","toISOString","split","formattedDate","CreatedDate","error","onSubmit","data","RDAcc","message","alert","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\add-client\\add-client.component.ts","C:\\Users\\kanwarpreet\\source\\repos\\DOPAgent\\DOPAgent\\ClientApp\\src\\app\\add-client\\add-client.component.html"],"sourcesContent":["import { Component, NgModule, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormControl } from '@angular/forms';\r\nimport { FloatLabelType } from '@angular/material/form-field';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-client',\r\n  templateUrl: './add-client.component.html',\r\n  styleUrls: ['./add-client.component.css']\r\n})\r\n\r\nexport class AddClientComponent {\r\n  apiResponse: any;\r\n  Id: number = 0;\r\n  RDAccNo!: string;\r\n  HolderName!: string;\r\n  CreatedDate!: Date;\r\n  baseUrl: string;\r\n  floatLabelControl = new FormControl('auto' as FloatLabelType);\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string, private _formBuilder: FormBuilder, private router: Router, private route: ActivatedRoute) {\r\n    this.baseUrl = baseUrl;\r\n\r\n  }\r\n  getFloatLabelValue(): FloatLabelType {\r\n    return this.floatLabelControl.value || 'auto';\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.route.paramMap.subscribe(params => {  \r\n      const clientId = +params.get('clientId');\r\n\r\n      const apiEndpoint = this.baseUrl + 'AddClientCnt/GetAddClientID';\r\n\r\n      this.http.post(apiEndpoint, clientId).subscribe(\r\n        (response) => {\r\n\r\n        \r\n          this.apiResponse = response;\r\n          console.log(this.apiResponse);\r\n\r\n          if (this.apiResponse.id > 0) {\r\n            this.Id = this.apiResponse.id;\r\n            this.RDAccNo = this.apiResponse.rdAcc;\r\n            this.HolderName = this.apiResponse.holderName;\r\n          \r\n\r\n            const inputDateString = this.apiResponse.createdDate;\r\n            const formattedDateString = new Date(inputDateString).toISOString().split('T')[0];\r\n            const formattedDate = new Date(formattedDateString);\r\n            this.CreatedDate = formattedDate;\r\n\r\n\r\n          }    \r\n        },\r\n        (error) => {\r\n          // Handle any errors that occur during the HTTP request.\r\n         \r\n        }\r\n      );\r\n   \r\n    });\r\n  }\r\n\r\n\r\n\r\n  onSubmit() {\r\n    // Send data to the server-side controller for saving to the database.\r\n    const data = {\r\n      Id: \"12344\",\r\n      RDAcc: this.RDAccNo,\r\n      HolderName: this.HolderName,\r\n      CreatedDate : this.CreatedDate\r\n\r\n    };\r\n\r\n\r\n    const apiEndpoint = this.baseUrl + 'AddClientCnt/InsertAddClient';\r\n\r\n   \r\n\r\n    this.http.post(apiEndpoint, data).subscribe(\r\n      (response) => {\r\n\r\n        this.apiResponse = response;\r\n       \r\n        if (this.apiResponse.message == \"Success\") {\r\n        \r\n          alert('Saved');\r\n          this.RDAccNo = \"\";\r\n          this.HolderName = \"\";\r\n          this.router.navigate(['/client-list']);\r\n          \r\n        }\r\n      },\r\n      (error) => {\r\n        // Handle any errors that occur during the HTTP request.\r\n        console.error('Error saving data', error);\r\n      }\r\n    );\r\n\r\n\r\n\r\n\r\n  }\r\n \r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <!-- Add Bootstrap CSS -->\r\n \r\n  <!-- Add your custom CSS if needed -->\r\n  <style>\r\n    /* Add your custom CSS here */\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"container mt-5\">\r\n    <form (submit)=\"onSubmit()\">\r\n      <div class=\"form-group\" style=\"display:none\">\r\n       \r\n        <input type=\"text\" id=\"Id\" [(ngModel)]=\"Id\" name=\"Id\" class=\"form-control\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"RDAccNo\">RD Account No.:</label>\r\n        <input type=\"text\" id=\"RDAccNo\" [(ngModel)]=\"RDAccNo\" name=\"RDAccNo\" class=\"form-control\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"HolderName\">Holder Name:</label>\r\n        <input type=\"text\" id=\"HolderName\" [(ngModel)]=\"HolderName\" name=\"HolderName\" class=\"form-control\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"CreatedDate\">Created Date:</label>\r\n        <input type=\"date\" id=\"CreatedDate\" [(ngModel)]=\"CreatedDate\" name=\"CreatedDate\" class=\"form-control\" required>\r\n      </div>\r\n      <button style=\"margin-top:10px\" type=\"submit\" class=\"btn btn-primary\">Save Data</button>\r\n    </form>\r\n  </div>\r\n\r\n \r\n\r\n  <!-- Add Bootstrap JS and jQuery if needed -->\r\n\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}